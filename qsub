#!/usr/bin/bash

# Script for submitting jobs to the supercomputers I use.
# Use with:
#   qsub [remote] [job_file] [--queue queue_name]
#   Example: qsub jupiter job.inp --queue big   # submit to jupiter with queue big
#            qsub pipeline job.inp              # submit to pipeline

usage() {
  echo "Usage: $0 [remote] [job_file] [--queue queue_name]"
  echo
  echo "Arguments:"
  echo "  remote     The remote server to submit the job: jupiter or pipeline."
  echo "  job_file   The job input file (e.g., job.inp)."
  echo
  echo "Options:"
  echo "  --queue    Specify the queue name for the jupiter server."
  echo "  -h, --help Show this help message."
  exit 1
}

# Initialize variables
queue_name=""

# Parse arguments
while [[ $# -gt 0 ]]; do
  case "$1" in
    -h|--help)
      usage
      ;;
    --queue)
      queue_name="$2"
      shift 2
      ;;
    jupiter|pipeline)
      remote="$1"
      shift
      ;;
    *)
      job_file="$1"
      shift
      ;;
  esac
done

# Ensure required arguments are provided
if [[ -z "$remote" || -z "$job_file" ]]; then
  echo "ERROR: Missing required arguments."
  usage
fi

# Change your local working directory here
local="/home/vport/projects/"
filename="${job_file%%.*}"
current_dir=$(pwd)'/'

# Set remote directories and job commands
case "$remote" in
  jupiter)
    cluster="jupiter"
    remote_dir="/scratch/vport/projects/"
    if [[ -n "$queue_name" ]]; then
      job_command="qorca6 -q $queue_name $job_file"
    else
      job_command="qorca6 $job_file"
    fi
    ;;
  pipeline)
    cluster="pipeline"
    remote_dir="/home/vport/projects/"
    job_command="pueue add -- job $job_file"
    ;;
  *)
    echo "ERROR: Invalid remote '$remote'. Must be 'jupiter' or 'pipeline'."
    usage
    ;;
esac

# Set up target directories
len_local=${#local}
len_current=${#current_dir}
remote_target="${remote_dir}${current_dir:$len_local:$len_current}"
current_remote="$remote_target"

# Push all files of the current folder to the remote and submit the job
csync "$cluster" push

# Submit the job on the remote server
ssh "$cluster" "
  cd \"$current_remote\"
  echo \"Submitting file $job_file at $cluster:$current_remote\"
  $job_command
"
